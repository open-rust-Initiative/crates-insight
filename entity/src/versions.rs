//! SeaORM Entity. Generated by sea-orm-codegen 0.9.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "versions")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub crate_id: i32,
    pub num: String,
    pub updated_at: DateTime,
    pub created_at: DateTime,
    pub downloads: i32,
    pub features: Json,
    pub yanked: bool,
    pub license: Option<String>,
    pub crate_size: Option<i32>,
    pub published_by: Option<i32>,
    pub checksum: String,
    pub links: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
